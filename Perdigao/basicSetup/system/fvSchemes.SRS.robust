/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2212                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include        "${FOAM_CASE}/system/include/caseDefinition"

// calculate velocity magnitude value at inlet
Uref            #eval{ sqrt(sqr($Uxref) + sqr($Uyref) + sqr($Uzref)) };

ddtSchemes
{
    default                       bounded backward 1;
}

gradSchemes
{
    default                       Gauss linear;
    grad(U)                       cellLimited Gauss linear 1;
    grad(T)                       cellLimited Gauss linear 1;
    grad(k)                       cellLimited Gauss linear 1;
    grad(omega)                   cellLimited Gauss linear 1;
    grad(nuTilda)                 cellLimited Gauss linear 1;
}

divSchemes
{
    default                       none;

    div(phi,U)                    bounded Gauss DEShybridDev
        deferredCorrection filteredLinear2V 0.1 0  // scheme 1
        linearUpwindV grad(U)                      // scheme 2
        hmax                                       // LES delta name, e.g. 'delta', 'hmax'
        0.65                                       // DES coefficient, typically = 0.65
        $Uref                                      // reference velocity scale (in m/s)
        $lref                                      // reference length scale (in m)
        0.0                                        // Minimum sigma limit (0-1)
        1.0                                        // Maximum sigma limit (0-1)
        1.0                                        // Limiter of B function
        10.0                                       // nut limiter (if > 1, GAM extension is active)
        false                                      // Toggle writing of blending indicator fields: fd, f2dBL, stabilityBlending, CoBlending
        false                                      // (experimental) "shielding" of RANS BLs from scheme 1
        10                                         // Cd1 constant of DDES shielding function
        false                                      // activate additional stability blending factor
        blendedIndicatorU                          // name of stability blending factor field
        false                                      // Enable additional blending based on CFL number
        0.9                                        // Lower CFL number limit CoMin below which only scheme 1 is used
        1.0                                        // Upper CFL number limit CoMax above which only scheme 2 is used
        phi;                                       // Flux field used to calculate CFL number
    
    div(phi,T)                    bounded Gauss upwind;

    turbulence                    bounded Gauss upwind;
    div(phi,k)                    $turbulence;
    div(phi,omega)                $turbulence;
    div(phi,nuTilda)              $turbulence;

    div((nuEff*dev2(T(grad(U))))) Gauss linear;
}

laplacianSchemes
{
    default                       Gauss linear limited corrected 0.33;
}

interpolationSchemes
{
    default                       linear;
}

snGradSchemes
{
    default                       limited corrected 0.33;
}

fluxRequired
{
    default                       no;
    p;
    p_rgh;
}

wallDist
{
    #if $exactWallDist
        method                    exactDistance;
    #else
        method                    meshWave;
    #endif
    nRequired                     true;
    updateInterval                0;
}

// ************************************************************************* //
