case:
    type: CaseOnDisk
    solver: pisoFoam
    origin: ${{env.LidDrivenCavity}}/S
    post_build:
      # NOTE Need to create fvSolution first
      - shell: cp system/fvSolution.fixedNORM system/fvSolution
      - controlDict:
           writeFormat: binary
           libs: ["libOGL.so"]
      - fvSolution:
            set: solvers/p
            clear: True
            tolerance: 1e-04
            relTol: 0
            maxIter: 3000
            #      - setKeyValuePair:
            #file: constant/transportProperties
            #foo: 3000
variation:
  - operation: blockMesh
    schema: "mesh/{modifyBlock}"
    values:
      - modifyBlock: "(100 100 100)->(100 100 100)"
        controlDict:
          deltaT: 0.001
          endTime: 0.02
      - modifyBlock: "(100 100 100)->(50 50 50)"
        controlDict:
          deltaT: 0.0005
          endTime: 0.01
    variation:
      - operation: fvSolution
        schema: "linear_solver/{solver}{preconditioner}{executor}"
        values:
          - set: solvers/p
            preconditioner: none
            solver: GKOCG
            forceHostBuffer: 1
            verbose: 1
            executor: ${{env.GINKGO_EXECUTOR}}
          - set: solvers/p
            solver: PCG
            preconditioner: none
            executor: CPU
        variation:
          - operation: decomposePar
            schema: "decomposition_GPU/{method}_{numberSubDomains}"
            values:
              - method: simple
                numberSubDomains: ${{ 1 * ${{env.NGPUS}} }}
              - method: simple
                numberSubDomains: ${{ 2 * ${{env.NGPUS}} }}
              - method: simple
                numberSubDomains: ${{ 4 * ${{env.NGPUS}} }}
            parent:
              executor: ${{env.GINKGO_EXECUTOR}}
          - operation: decomposePar
            schema: "decomposition_CPU/{method}_{numberSubDomains}"
            values:
              - method: simple
                numberSubDomains: ${{ 1 * ${{env.NGPUS}} }}
              - method: simple
                numberSubDomains: ${{ 2 * ${{env.NGPUS}} }}
              - method: simple
                numberSubDomains: ${{ 4 * ${{env.NGPUS}} }}
            parent:
              executor: CPU
