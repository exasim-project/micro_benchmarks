- operation: decomposePar
  schema: "decompose_GPU/{method}_{numberSubDomains}"
  values:
    - method: simple
      numberSubDomains: ${{ 1 * ${{env.NGPUS}} }}
    - if: False
      method: simple
      numberSubDomains: ${{ 2 * ${{env.NGPUS}} }}
    - if: ${{ env.large == 4 }}
      method: simple
      numberSubDomains: ${{ 4 * ${{env.NGPUS}} }}
  parent:
    executor: ${{env.GINKGO_EXECUTOR}}
- operation: decomposePar
  schema: "decompose_GPU_repartition/{method}_{numberSubDomains}"
  values:
    - method: simple
      numberSubDomains: ${{ 0.25 * ${{env.NGPUS}} * ${{env.NCPU_PER_GPU}} }}
      fvSolution:
        - set: solvers/p
          ranksPerGPU: ${{ 0.25 * env.NCPUS_PER_GPU}}
    - method: simple
      numberSubDomains: ${{ 0.5 * ${{env.NGPUS}} * ${{env.NCPU_PER_GPU}} }}
      fvSolution:
        - set: solvers/p
          ranksPerGPU: ${{ 0.5 * env.NCPUS_PER_GPU}}
    - method: simple
      numberSubDomains: ${{ 1.0 * ${{env.NGPUS}} * ${{env.NCPU_PER_GPU}} }}
      fvSolution:
        - set: solvers/p
          ranksPerGPU: ${ 1.0 * {env.NCPUS_PER_GPU}}
  parent:
    executor: ${{env.GINKGO_EXECUTOR}}
- operation: decomposePar
  schema: "decompose_CPU/{method}_{numberSubDomains}"
  values:
    - method: simple
      numberSubDomains: ${{ 1 * ${{env.NGPUS}} }}
    - method: simple
      numberSubDomains: ${{ 2 * ${{env.NGPUS}} }}
    - method: simple
      numberSubDomains: ${{ 4 * ${{env.NGPUS}} }}
  parent:
    executor: CPU
