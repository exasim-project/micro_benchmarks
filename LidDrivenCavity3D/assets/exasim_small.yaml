case:
    type: GitRepo
    url: https://develop.openfoam.com/committees/hpc.git
    folder: Lid_driven_cavity-3d/S 
    cache_folder: ${{env.LidDrivenCavityS}}
    commit: f9594d16aa6993bb3690ec47b2ca624b37ea40cd  
    uses:
      - fvSolution: fvSolution.fixedNORM
    post_build:
      # NOTE Need to create fvSolution first
      - controlDict:
           writeFormat: binary
           libs: ["libOGL.so", "libpetscFoam.so"]
      - fvSolution:
            set: solvers/p
            clear: True
            tolerance: 1e-04
            relTol: 0
            maxIter: 5000
variation:
  - operation: blockMesh
    schema: "mesh/{cells}"
    values:
      - modifyBlock: "(100 100 100)->(100 100 100)"
        cells: 100
        controlDict:
          deltaT: 0.0005
          endTime: 0.01
    variation:
      - operation: decomposePar
        schema: "decompose/{method}_{partition}_n{numberOfSubdomains}"
        common:
            method: simple
        generator:
            key: coeff 
            values: [1 ]
            template:
              - numberOfSubdomains: ${{ coeff * ${{env.NGPUS}} }}
                partition: GPU
        variation:
          - operation: fvSolution
            schema: "linear_solver/fuse_{fuse}"
            values:
              - if: [{partition: GPU}]
                set: solvers/p
                solver: GKOCG
                forceHostBuffer: 0
                verbose: 1
                fuse: 1
                preconditioner: none
                matrixFormat: Coo
                executor: ${{env.GINKGO_EXECUTOR}}
              - if: [{partition: GPU}]
                set: solvers/p
                solver: GKOCG
                forceHostBuffer: 0
                verbose: 1
                fuse: 0
                preconditioner: none
                matrixFormat: Coo
                executor: ${{env.GINKGO_EXECUTOR}}
postProcess:
  queries: ["hostname", "cells", "numberOfSubdomains", "fuse", "ClockTime", "timeStepContErrors_sumLocal"]
  matcher:
    - regexp: '\[OGL LOG\]\[Proc: 0\]{field}: {name}: (?P<{name}>[0-9.]*) \[ms\]'
      name: ogl_matcher
      args: ["field", "name"]
  log:
    - matcher: ogl_matcher
      args: ["p", "regenerate_distributed_matrix"]
      type: average
    - matcher: ogl_matcher
      args: ["p", "init_precond"]
      type: average
    - matcher: ogl_matcher
      args: ["p", "solve"]
      type: average
    - matcher: ogl_matcher
      args: ["p", "copy_x_back"]
      type: average
    - matcher: ogl_matcher
      args: ["p", "init_precond"]
      type: average
    - matcher: ogl_matcher
      args: ["p", "init_precond"]
      type: average
    - matcher: transpEqn
      args: ["p"]
      type: average
