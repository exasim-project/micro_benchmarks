/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2212                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0";
    object      omega;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include        "${FOAM_CASE}/system/include/caseDefinition"

// calculate omega value at inlet
Uref            #eval{ sqrt(sqr($Uxref) + sqr($Uyref) + sqr($Uzref)) };
kref            #eval{ 1.5*sqr($Uref*$Tu) };
nutref          #eval{ $viscRatio * $nuref };
omegaref        #eval{ $kref/$nutref };

dimensions      [ 0 0 -1 0 0 0 0 ];
internalField   uniform $omegaref;

boundaryField
{
    $inletPatch		//Inlet
    {
        type            fixedValue;
        value           $internalField;
    }

    $outletPatch		//Outlet
    {
        type            zeroGradient;
    }

    $forcesWallPatches
    {
        type            omegaWallFunction;
        blending        binomial;
        value           $internalField;
    }
    $remainingWallPatches
    {
        type            omegaWallFunction;
        blending        binomial;
        value           $internalField;
    }

    #include            "include/constraintPatches"
}

// ************************************************************************* //
