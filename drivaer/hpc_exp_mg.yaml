case:
    type: GitRepo
    url: https://develop.openfoam.com/committees/hpc.git
    folder: incompressible/simpleFoam/occDrivAerStaticMesh
    cache_folder: ${{env.drivaer}}
    commit: 84c262431117f5c921db8335e368a12d0e9fa3f0
    post_build:
      # NOTE Need to create fvSolution first
    uses:
      - fvSolution: fvSolution.fixedTol
      - controlDict: controlDict.noWrite
    post_build:
      - controlDict:
        writeFormat: binary
        endTime: 20
        libs: ["libOGL.so", "libOpenFOAM.so", "libdistributed.so", "libturbulenceModelSchemes.so", "libfieldFunctionObjects.so"]
# pre_cmds:
#           - potentialFoam -initialiseUBCs
#           - applyBoundaryLayer ybl "0.0450244"
#           - renumberMesh -overwrite
# post_cmds: 
#           - postProcess -func yPlus
#           - postProcess -func Q -latestTime
variation:
  - operation: replaceMesh
    schema: "mesh/{mesh}"
    common:
      path: /hkfs/home/project/hk-project-test-fine/eq4036/data/code/driveaer/assets 
    values:
      - mesh: S
    variation:
     - operation: decomposePar
       schema: "subdomains_{numberOfSubdomains}"
       common:
           method: multiLevel
           methods: ["simple", "scotch", "scotch"]
           levels: ["nodes", "gpu", "cpu"]
           distribution: ["auto", 4, 18]
           tasksPerNode: 72
       values:
           - numberOfSubdomains: ${{ 1 * 4 *  18 }}
           - numberOfSubdomains: ${{ 4 * 4 *  18 }}
           - numberOfSubdomains: ${{ 8 * 4 *  18 }}
           - numberOfSubdomains: ${{ 12 * 4 *  18 }}
           - numberOfSubdomains: ${{ 16 * 4 *  18 }}
       variation:
         - operation: fvSolution
           schema: "mg_maxLevels_{maxLevels}"
           common: 
               name: maxLevels
               executor: cuda
               verbose: 1
               ranksPerGPU: 18 
           values:
             - set: solvers/p
               solver: GKOCG 
               maxLevels: 20
               preconditioner:
                 preconditioner: Multigrid
                 maxLevels: 20
             - set: solvers/p
               solver: GKOCG 
               maxLevels: 15
               preconditioner:
                 preconditioner: Multigrid
                 maxLevels: 15
             - set: solvers/p
               solver: GKOCG 
               maxLevels: 10
               preconditioner:
                 preconditioner: Multigrid
                 maxLevels: 10
             - set: solvers/p
               solver: GKOCG 
               maxLevels: 5
               preconditioner:
                 preconditioner: Multigrid
         - operation: fvSolution
           schema: "cycle_{cycle}"
           common: 
               name: cycle
               executor: cuda
               verbose: 1
               ranksPerGPU: 18 
           values:
             - set: solvers/p
               solver: GKOCG 
               maxLevels: 20
               cycle: "v"
               preconditioner:
                 preconditioner: Multigrid
                 cycle: "v"
             - set: solvers/p
               solver: GKOCG 
               maxLevels: 20
               cycle: "w"
               preconditioner:
                 preconditioner: Multigrid
                 cycle: "w"
         - operation: fvSolution
           schema: "maxIterSmoother_{maxIterSmoother}"
           common: 
               name: maxIterSmoother
               executor: cuda
               verbose: 1
               ranksPerGPU: 18 
           values:
             - set: solvers/p
               solver: GKOCG 
               maxLevels: 20
               maxIterSmoother: 1
               preconditioner:
                 preconditioner: Multigrid
                 maxIterSmoother: 1
             - set: solvers/p
               solver: GKOCG 
               maxLevels: 20
               maxIterSmoother: 2
               preconditioner:
                 preconditioner: Multigrid
                 maxIterSmoother: 2
             - set: solvers/p
               solver: GKOCG 
               maxLevels: 20
               maxIterSmoother: 3
               preconditioner:
                 preconditioner: Multigrid
                 maxIterSmoother: 3
             - set: solvers/p
               solver: GKOCG 
               maxLevels: 20
               maxIterSmoother: 4
               preconditioner:
                 preconditioner: Multigrid
                 maxIterSmoother: 4
         - operation: fvSolution
           schema: "smoother_{smoother}"
           common: 
               name: smoother
               executor: cuda
               verbose: 1
               ranksPerGPU: 18 
           values:
             - set: solvers/p
               solver: GKOCG 
               smoother: Jacobi
               preconditioner:
                 preconditioner: Multigrid
                 smoother: Jacobi
             - set: solvers/p
               solver: GKOCG 
               smoother: SOR
               preconditioner:
                 preconditioner: Multigrid
                 smoother: SOR
             - set: solvers/p
               solver: GKOCG 
               smoother: SSOR
               preconditioner:
                 preconditioner: Multigrid
                 smoother: SSOR
         - operation: fvSolution
           schema: "coarseSolver_{coarseSolver}_iter_{maxIterCoarse}"
           common: 
               name: coarseSolver
               executor: cuda
               verbose: 1
               ranksPerGPU: 18 
           values:
             - set: solvers/p
               solver: GKOCG 
               coarseSolver: CG
               maxIterCoarse: 4
               preconditioner:
                 preconditioner: Multigrid
                 coarseSolver: CG
                 maxIterCoarse: 4
             - set: solvers/p
               solver: GKOCG 
               coarseSolver: CG
               maxIterCoarse: 8
               preconditioner:
                 preconditioner: Multigrid
                 coarseSolver: CG
                 maxIterCoarse: 8
             - set: solvers/p
               solver: GKOCG 
               coarseSolver: CG
               maxIterCoarse: 12
               preconditioner:
                 preconditioner: Multigrid
                 coarseSolver: CG
                 maxIterCoarse: 12
             - set: solvers/p
               solver: GKOCG 
               maxLevels: 20
               coarseSolver: CG
               maxIterCoarse: 16
               preconditioner:
                 preconditioner: Multigrid
                 coarseSolver: CG
                 maxIterCoarse: 16
         - operation: fvSolution
           schema: "cg_bj"
           common: 
               executor: cuda
               verbose: 1
               ranksPerGPU: 18 
           values:
             - set: solvers/p
               solver: GKOCG 
               preconditioner: BJ
postProcess:
  queries: ["hostname", "ranksPerGPU", "cells", "numberOfSubdomains", "fuse", "ClockTime", "timeStepContErrors_sumLocal", "executor", "forceHostBuffer", "MPIxRankComm", "partition", "matrixFormat", "name", "coarseSolver", "maxIterCoarse", "smoother", "maxIterSmoother", "cycle", "maxLevels"]
  matcher:
    - regexp: '\[OGL LOG\]\[Proc: 0\]{field}: {name}: (?P<{name}>[0-9.]*) \[ms\]'
      name: ogl_matcher
      args: ["field", "name"]
    - regexp: '\[INFO\] {name}: (?P<{name}>[0-9e\+\-.]*) \[ms\]'
      name: info_matcher
      args: ["name"]
  log:
    - matcher: info_matcher
      args: ["TimeStep"]
      type: average
    - matcher: info_matcher
      args: ["SolveP"]
      type: average
    - matcher: info_matcher
      args: ["PISOStep"]
      type: average
    - matcher: info_matcher
      args: ["MomentumPredictor"]
      type: average
    - matcher: info_matcher
      args: ["MatrixAssemblyU"]
      type: average
    - matcher: info_matcher
      args: ["MatrixAssemblyPI"]
      type: average
    - matcher: info_matcher
      args: ["MatrixAssemblyPII"]
      type: average
    - matcher: ogl_matcher
      args: ["p", "solve"]
      type: average
    - matcher: ogl_matcher
      args: ["p", "solve_multi_gpu"]
      type: average
    - matcher: ogl_matcher
      args: ["p", "copy_x_back"]
      type: average
    - matcher: ogl_matcher
      args: ["p", "init_precond"]
      type: average
    - matcher: ogl_matcher
      args: ["p", "perform_all_to_all_update"]
      type: average
    - matcher: ogl_matcher
      args: ["p", "perform_pairwise_update"]
      type: average
    - matcher: ogl_matcher
      args: ["p", "reorder_matrix_data"]
      type: average
    - matcher: ogl_matcher
      args: ["p_distributed_matrix", "call_update"]
      type: average
    - matcher: transpEqn
      args: ["p"]
      type: average


